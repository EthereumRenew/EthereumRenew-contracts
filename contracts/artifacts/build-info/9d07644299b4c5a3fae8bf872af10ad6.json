{
	"id": "9d07644299b4c5a3fae8bf872af10ad6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ETHREN.sol": {
				"content": "pragma solidity ^0.4.18;\r\n/**\r\n * This smart contract code is Copyright 2022 EthereumRenew. For more information see https://ethereumrenew.org\r\n *\r\n * Licensed under the Apache License, version 2.0\r\n */\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that revert() on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically revert()s when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * ETHREN\r\n *\r\n * Abstract contract that create ETHREN Token based on ERC20.\r\n *\r\n */\r\ncontract ETHREN {\r\n    using SafeMath for uint256;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => uint256) public freezeOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /* This notifies clients about the amount burnt */\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /* This notifies clients about the amount frozen */\r\n    event Freeze(address indexed from, uint256 value);\r\n\r\n    /* This notifies clients about the amount unfrozen */\r\n    event Unfreeze(address indexed from, uint256 value);\r\n\r\n    /* This notifies the owner transfer */\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    function ETHREN( uint256 initialSupply, uint8 decimalUnits) public {\r\n        balanceOf[msg.sender] = initialSupply; // Give the creator all initial tokens\r\n        totalSupply = initialSupply; // Update total supply\r\n        name = \"Ethereum Renew\";   // Set the name for display purposes\r\n        symbol = \"ETHREN\";    // Set the symbol for display purposes\r\n        decimals = decimalUnits;  // Amount of decimals for display purposes\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n      require(msg.sender == owner);\r\n      _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n      require(newOwner != address(0));\r\n      OwnershipTransferred(owner, newOwner);\r\n      owner = newOwner;\r\n    }\r\n\r\n    /* Send Coins */\r\n    function transfer(address _to, uint256 _value) public {\r\n        require(_to != 0x0);\r\n        require(_value > 0);\r\n        require(balanceOf[msg.sender] >= _value );// Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value); // Subtract from the sender\r\n        balanceOf[_to] = balanceOf[_to].add(_value);  // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);   // Notify anyone listening that this transfer took place\r\n    }\r\n\r\n    /* Allow another contract to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        require(_value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != 0x0);\r\n        require(_value > 0);\r\n        require(balanceOf[_from] >= _value );// Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows\r\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);   // Subtract from the sender\r\n        balanceOf[_to] = balanceOf[_to].add(_value);  // Add the same to the recipient\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _value) public onlyOwner returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value);// Check if the sender has enough\r\n        require(_value > 0);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);  // Subtract from the sender\r\n        totalSupply = totalSupply.sub(_value); // Updates totalSupply\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function freeze(uint256 _value) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value);// Check if the sender has enough\r\n        require(_value > 0);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value); // Subtract from the sender\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].add(_value);  // Updates totalSupply\r\n        Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function unfreeze(uint256 _value) public returns (bool) {\r\n        require(freezeOf[msg.sender] >= _value); // Check if the sender has enough\r\n        require(_value > 0);\r\n\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].sub(_value); // Subtract from the sender\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(_value);\r\n        Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    // transfer contract balance to owner\r\n    function withdrawEther(uint256 amount) public onlyOwner {\r\n        owner.transfer(amount);\r\n    }\r\n\r\n    // can accept ether\r\n    function() payable public {\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ETHREN.sol": {
				"ETHREN": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawEther",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "unfreeze",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "freezeOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "freeze",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"name": "decimalUnits",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Freeze",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Unfreeze",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/ETHREN.sol\":1142:6430  contract ETHREN {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ETHREN.sol\":2305:2778  function ETHREN( uint256 initialSupply, uint8 decimalUnits) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ETHREN.sol\":2305:2778  function ETHREN( uint256 initialSupply, uint8 decimalUnits) public {\r... */\n  pop\n  mload(0x40)\n  0x40\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ETHREN.sol\":2407:2420  initialSupply */\n  dup2\n    /* \"contracts/ETHREN.sol\":2383:2392  balanceOf */\n  0x5\n    /* \"contracts/ETHREN.sol\":2383:2404  balanceOf[msg.sender] */\n  0x0\n    /* \"contracts/ETHREN.sol\":2393:2403  msg.sender */\n  caller\n    /* \"contracts/ETHREN.sol\":2383:2404  balanceOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/ETHREN.sol\":2383:2420  balanceOf[msg.sender] = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ETHREN.sol\":2484:2497  initialSupply */\n  dup2\n    /* \"contracts/ETHREN.sol\":2470:2481  totalSupply */\n  0x3\n    /* \"contracts/ETHREN.sol\":2470:2497  totalSupply = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ETHREN.sol\":2531:2554  name = \"Ethereum Renew\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xe\n  dup2\n  mstore\n  0x20\n  add\n  0x457468657265756d2052656e6577000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ETHREN.sol\":2531:2535  name */\n  0x0\n    /* \"contracts/ETHREN.sol\":2531:2554  name = \"Ethereum Renew\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/ETHREN.sol\":2604:2621  symbol = \"ETHREN\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x6\n  dup2\n  mstore\n  0x20\n  add\n  0x45544852454e0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ETHREN.sol\":2604:2610  symbol */\n  0x1\n    /* \"contracts/ETHREN.sol\":2604:2621  symbol = \"ETHREN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_6:\n  pop\n    /* \"contracts/ETHREN.sol\":2685:2697  decimalUnits */\n  dup1\n    /* \"contracts/ETHREN.sol\":2674:2682  decimals */\n  0x2\n  0x0\n    /* \"contracts/ETHREN.sol\":2674:2697  decimals = decimalUnits */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ETHREN.sol\":2760:2770  msg.sender */\n  caller\n    /* \"contracts/ETHREN.sol\":2752:2757  owner */\n  0x4\n  0x0\n    /* \"contracts/ETHREN.sol\":2752:2770  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ETHREN.sol\":2305:2778  function ETHREN( uint256 initialSupply, uint8 decimalUnits) public {\r... */\n  pop\n  pop\n    /* \"contracts/ETHREN.sol\":1142:6430  contract ETHREN {\r... */\n  jump(tag_7)\ntag_5:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_8)\ntag_9:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_8\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_8:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  jump\t// in(tag_13)\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_15)\ntag_16:\n  pop\n  swap1\n  jump\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ETHREN.sol\":1142:6430  contract ETHREN {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3bed33ce\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6623fc46\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcd4217c1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd7a78db8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n    tag_1:\n      stop\n        /* \"contracts/ETHREN.sol\":1198:1216  string public name */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/ETHREN.sol\":1198:1216  string public name */\n      pop\n      tag_21\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_23:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_23)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ETHREN.sol\":1198:1216  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_26:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":3993:4177  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/ETHREN.sol\":3993:4177  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_28\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1278:1304  uint256 public totalSupply */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/ETHREN.sol\":1278:1304  uint256 public totalSupply */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":4233:4951  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/ETHREN.sol\":4233:4951  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_34\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1250:1271  uint8 public decimals */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/ETHREN.sol\":1250:1271  uint8 public decimals */\n      pop\n      tag_37\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":6263:6360  function withdrawEther(uint256 amount) public onlyOwner {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/ETHREN.sol\":6263:6360  function withdrawEther(uint256 amount) public onlyOwner {\r... */\n      pop\n      tag_40\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_41)\n    tag_40:\n      stop\n        /* \"contracts/ETHREN.sol\":4959:5370  function burn(uint256 _value) public onlyOwner returns (bool) {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/ETHREN.sol\":4959:5370  function burn(uint256 _value) public onlyOwner returns (bool) {\r... */\n      pop\n      tag_43\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":5809:6212  function unfreeze(uint256 _value) public returns (bool) {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"contracts/ETHREN.sol\":5809:6212  function unfreeze(uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_46\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_47)\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1391:1436  mapping (address => uint256) public balanceOf */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"contracts/ETHREN.sol\":1391:1436  mapping (address => uint256) public balanceOf */\n      pop\n      tag_49\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_50)\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1311:1331  address public owner */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"contracts/ETHREN.sol\":1311:1331  address public owner */\n      pop\n      tag_52\n      jump(tag_53)\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1223:1243  string public symbol */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/ETHREN.sol\":1223:1243  string public symbol */\n      pop\n      tag_55\n      jump(tag_56)\n    tag_55:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_57:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_57)\n    tag_58:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ETHREN.sol\":1223:1243  string public symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_60\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_60:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":3335:3915  function transfer(address _to, uint256 _value) public {\r... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"contracts/ETHREN.sol\":3335:3915  function transfer(address _to, uint256 _value) public {\r... */\n      pop\n      tag_62\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_63)\n    tag_62:\n      stop\n        /* \"contracts/ETHREN.sol\":1443:1487  mapping (address => uint256) public freezeOf */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n        /* \"contracts/ETHREN.sol\":1443:1487  mapping (address => uint256) public freezeOf */\n      pop\n      tag_65\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_66)\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":5378:5801  function freeze(uint256 _value) public returns (bool) {\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"contracts/ETHREN.sol\":5378:5801  function freeze(uint256 _value) public returns (bool) {\r... */\n      pop\n      tag_68\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_69)\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":1494:1560  mapping (address => mapping (address => uint256)) public allowance */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"contracts/ETHREN.sol\":1494:1560  mapping (address => mapping (address => uint256)) public allowance */\n      pop\n      tag_71\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_72)\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ETHREN.sol\":3124:3305  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_73:\n        /* \"contracts/ETHREN.sol\":3124:3305  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_74\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_75)\n    tag_74:\n      stop\n        /* \"contracts/ETHREN.sol\":1198:1216  string public name */\n    tag_22:\n      0x0\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_76\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_77\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_76)\n    tag_77:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_78:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_78\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":3993:4177  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_29:\n        /* \"contracts/ETHREN.sol\":4060:4064  bool */\n      0x0\n        /* \"contracts/ETHREN.sol\":4094:4095  0 */\n      dup1\n        /* \"contracts/ETHREN.sol\":4085:4091  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4085:4095  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":4077:4096  require(_value > 0) */\n      iszero\n      iszero\n      tag_80\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_80:\n        /* \"contracts/ETHREN.sol\":4141:4147  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":4107:4116  allowance */\n      0x7\n        /* \"contracts/ETHREN.sol\":4107:4128  allowance[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4117:4127  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":4107:4128  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4107:4138  allowance[msg.sender][_spender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4129:4137  _spender */\n      dup6\n        /* \"contracts/ETHREN.sol\":4107:4138  allowance[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4107:4147  allowance[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":4165:4169  true */\n      0x1\n        /* \"contracts/ETHREN.sol\":4158:4169  return true */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":3993:4177  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1278:1304  uint256 public totalSupply */\n    tag_32:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":4233:4951  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_35:\n        /* \"contracts/ETHREN.sol\":4315:4319  bool */\n      0x0\n        /* \"contracts/ETHREN.sol\":4347:4350  0x0 */\n      dup1\n        /* \"contracts/ETHREN.sol\":4340:4343  _to */\n      dup4\n        /* \"contracts/ETHREN.sol\":4340:4350  _to != 0x0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ETHREN.sol\":4332:4351  require(_to != 0x0) */\n      iszero\n      iszero\n      tag_82\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_82:\n        /* \"contracts/ETHREN.sol\":4379:4380  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":4370:4376  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4370:4380  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":4362:4381  require(_value > 0) */\n      iszero\n      iszero\n      tag_83\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_83:\n        /* \"contracts/ETHREN.sol\":4420:4426  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":4400:4409  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4400:4416  balanceOf[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4410:4415  _from */\n      dup7\n        /* \"contracts/ETHREN.sol\":4400:4416  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4400:4426  balanceOf[_from] >= _value */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":4392:4428  require(balanceOf[_from] >= _value ) */\n      iszero\n      iszero\n      tag_84\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_84:\n        /* \"contracts/ETHREN.sol\":4507:4516  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4507:4521  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4517:4520  _to */\n      dup5\n        /* \"contracts/ETHREN.sol\":4507:4521  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4497:4503  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4480:4489  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4480:4494  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4490:4493  _to */\n      dup7\n        /* \"contracts/ETHREN.sol\":4480:4494  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4480:4503  balanceOf[_to] + _value */\n      add\n        /* \"contracts/ETHREN.sol\":4480:4521  balanceOf[_to] + _value >= balanceOf[_to] */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":4472:4522  require(balanceOf[_to] + _value >= balanceOf[_to]) */\n      iszero\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_85:\n        /* \"contracts/ETHREN.sol\":4574:4583  allowance */\n      0x7\n        /* \"contracts/ETHREN.sol\":4574:4590  allowance[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4584:4589  _from */\n      dup6\n        /* \"contracts/ETHREN.sol\":4574:4590  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4574:4602  allowance[_from][msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4591:4601  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":4574:4602  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4564:4570  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4564:4602  _value <= allowance[_from][msg.sender] */\n      gt\n      iszero\n        /* \"contracts/ETHREN.sol\":4556:4603  require(_value <= allowance[_from][msg.sender]) */\n      iszero\n      iszero\n      tag_86\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_86:\n        /* \"contracts/ETHREN.sol\":4654:4682  balanceOf[_from].sub(_value) */\n      tag_87\n        /* \"contracts/ETHREN.sol\":4675:4681  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4654:4663  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4654:4670  balanceOf[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4664:4669  _from */\n      dup8\n        /* \"contracts/ETHREN.sol\":4654:4670  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4654:4674  balanceOf[_from].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":4654:4682  balanceOf[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"contracts/ETHREN.sol\":4635:4644  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4635:4651  balanceOf[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4645:4650  _from */\n      dup7\n        /* \"contracts/ETHREN.sol\":4635:4651  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4635:4682  balanceOf[_from] = balanceOf[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":4740:4766  balanceOf[_to].add(_value) */\n      tag_89\n        /* \"contracts/ETHREN.sol\":4759:4765  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4740:4749  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4740:4754  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4750:4753  _to */\n      dup7\n        /* \"contracts/ETHREN.sol\":4740:4754  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4740:4758  balanceOf[_to].add */\n      tag_90\n      swap1\n        /* \"contracts/ETHREN.sol\":4740:4766  balanceOf[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"contracts/ETHREN.sol\":4723:4732  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":4723:4737  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4733:4736  _to */\n      dup6\n        /* \"contracts/ETHREN.sol\":4723:4737  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4723:4766  balanceOf[_to] = balanceOf[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":4842:4882  allowance[_from][msg.sender].sub(_value) */\n      tag_91\n        /* \"contracts/ETHREN.sol\":4875:4881  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":4842:4851  allowance */\n      0x7\n        /* \"contracts/ETHREN.sol\":4842:4858  allowance[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4852:4857  _from */\n      dup8\n        /* \"contracts/ETHREN.sol\":4842:4858  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4842:4870  allowance[_from][msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4859:4869  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":4842:4870  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":4842:4874  allowance[_from][msg.sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":4842:4882  allowance[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/ETHREN.sol\":4811:4820  allowance */\n      0x7\n        /* \"contracts/ETHREN.sol\":4811:4827  allowance[_from] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4821:4826  _from */\n      dup7\n        /* \"contracts/ETHREN.sol\":4811:4827  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4811:4839  allowance[_from][msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":4828:4838  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":4811:4839  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":4811:4882  allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":4909:4912  _to */\n      dup3\n        /* \"contracts/ETHREN.sol\":4893:4921  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":4902:4907  _from */\n      dup5\n        /* \"contracts/ETHREN.sol\":4893:4921  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ETHREN.sol\":4914:4920  _value */\n      dup5\n        /* \"contracts/ETHREN.sol\":4893:4921  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ETHREN.sol\":4939:4943  true */\n      0x1\n        /* \"contracts/ETHREN.sol\":4932:4943  return true */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":4233:4951  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1250:1271  uint8 public decimals */\n    tag_38:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":6263:6360  function withdrawEther(uint256 amount) public onlyOwner {\r... */\n    tag_41:\n        /* \"contracts/ETHREN.sol\":2923:2928  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2919  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ETHREN.sol\":2901:2929  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/ETHREN.sol\":6330:6335  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":6330:6344  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":6330:6352  owner.transfer(amount) */\n      0x8fc\n        /* \"contracts/ETHREN.sol\":6345:6351  amount */\n      dup3\n        /* \"contracts/ETHREN.sol\":6330:6352  owner.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"contracts/ETHREN.sol\":6330:6352  owner.transfer(amount) */\n      pop\n        /* \"contracts/ETHREN.sol\":6263:6360  function withdrawEther(uint256 amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":4959:5370  function burn(uint256 _value) public onlyOwner returns (bool) {\r... */\n    tag_44:\n        /* \"contracts/ETHREN.sol\":5015:5019  bool */\n      0x0\n        /* \"contracts/ETHREN.sol\":2923:2928  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2919  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ETHREN.sol\":2901:2929  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_97\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_97:\n        /* \"contracts/ETHREN.sol\":5065:5071  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":5040:5049  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5040:5061  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5050:5060  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5040:5061  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5040:5071  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":5032:5072  require(balanceOf[msg.sender] >= _value) */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_99:\n        /* \"contracts/ETHREN.sol\":5133:5134  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":5124:5130  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5124:5134  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":5116:5135  require(_value > 0) */\n      iszero\n      iszero\n      tag_100\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_100:\n        /* \"contracts/ETHREN.sol\":5172:5205  balanceOf[msg.sender].sub(_value) */\n      tag_101\n        /* \"contracts/ETHREN.sol\":5198:5204  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5172:5181  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5172:5193  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5182:5192  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5172:5193  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5172:5197  balanceOf[msg.sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":5172:5205  balanceOf[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/ETHREN.sol\":5148:5157  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5148:5169  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5158:5168  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5148:5169  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":5148:5205  balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":5259:5282  totalSupply.sub(_value) */\n      tag_102\n        /* \"contracts/ETHREN.sol\":5275:5281  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5259:5270  totalSupply */\n      sload(0x3)\n        /* \"contracts/ETHREN.sol\":5259:5274  totalSupply.sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":5259:5282  totalSupply.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/ETHREN.sol\":5245:5256  totalSupply */\n      0x3\n        /* \"contracts/ETHREN.sol\":5245:5282  totalSupply = totalSupply.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":5321:5331  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5316:5340  Burn(msg.sender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"contracts/ETHREN.sol\":5333:5339  _value */\n      dup4\n        /* \"contracts/ETHREN.sol\":5316:5340  Burn(msg.sender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ETHREN.sol\":5358:5362  true */\n      0x1\n        /* \"contracts/ETHREN.sol\":5351:5362  return true */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":4959:5370  function burn(uint256 _value) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":5809:6212  function unfreeze(uint256 _value) public returns (bool) {\r... */\n    tag_47:\n        /* \"contracts/ETHREN.sol\":5859:5863  bool */\n      0x0\n        /* \"contracts/ETHREN.sol\":5908:5914  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":5884:5892  freezeOf */\n      0x6\n        /* \"contracts/ETHREN.sol\":5884:5904  freezeOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5893:5903  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5884:5904  freezeOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5884:5914  freezeOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":5876:5915  require(freezeOf[msg.sender] >= _value) */\n      iszero\n      iszero\n      tag_104\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_104:\n        /* \"contracts/ETHREN.sol\":5977:5978  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":5968:5974  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5968:5978  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":5960:5979  require(_value > 0) */\n      iszero\n      iszero\n      tag_105\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_105:\n        /* \"contracts/ETHREN.sol\":6015:6047  freezeOf[msg.sender].sub(_value) */\n      tag_106\n        /* \"contracts/ETHREN.sol\":6040:6046  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":6015:6023  freezeOf */\n      0x6\n        /* \"contracts/ETHREN.sol\":6015:6035  freezeOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":6024:6034  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":6015:6035  freezeOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":6015:6039  freezeOf[msg.sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":6015:6047  freezeOf[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/ETHREN.sol\":5992:6000  freezeOf */\n      0x6\n        /* \"contracts/ETHREN.sol\":5992:6012  freezeOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":6001:6011  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5992:6012  freezeOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":5992:6047  freezeOf[msg.sender] = freezeOf[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":6110:6143  balanceOf[msg.sender].add(_value) */\n      tag_107\n        /* \"contracts/ETHREN.sol\":6136:6142  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":6110:6119  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":6110:6131  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":6120:6130  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":6110:6131  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":6110:6135  balanceOf[msg.sender].add */\n      tag_90\n      swap1\n        /* \"contracts/ETHREN.sol\":6110:6143  balanceOf[msg.sender].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/ETHREN.sol\":6086:6095  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":6086:6107  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":6096:6106  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":6086:6107  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":6086:6143  balanceOf[msg.sender] = balanceOf[msg.sender].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":6163:6173  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":6154:6182  Unfreeze(msg.sender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f\n        /* \"contracts/ETHREN.sol\":6175:6181  _value */\n      dup4\n        /* \"contracts/ETHREN.sol\":6154:6182  Unfreeze(msg.sender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ETHREN.sol\":6200:6204  true */\n      0x1\n        /* \"contracts/ETHREN.sol\":6193:6204  return true */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":5809:6212  function unfreeze(uint256 _value) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1391:1436  mapping (address => uint256) public balanceOf */\n    tag_50:\n      mstore(0x20, 0x5)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1311:1331  address public owner */\n    tag_53:\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1223:1243  string public symbol */\n    tag_56:\n      0x1\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":3335:3915  function transfer(address _to, uint256 _value) public {\r... */\n    tag_63:\n        /* \"contracts/ETHREN.sol\":3415:3418  0x0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":3408:3411  _to */\n      dup3\n        /* \"contracts/ETHREN.sol\":3408:3418  _to != 0x0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ETHREN.sol\":3400:3419  require(_to != 0x0) */\n      iszero\n      iszero\n      tag_112\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_112:\n        /* \"contracts/ETHREN.sol\":3447:3448  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":3438:3444  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":3438:3448  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":3430:3449  require(_value > 0) */\n      iszero\n      iszero\n      tag_113\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_113:\n        /* \"contracts/ETHREN.sol\":3493:3499  _value */\n      dup1\n        /* \"contracts/ETHREN.sol\":3468:3477  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3468:3489  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3478:3488  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":3468:3489  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":3468:3499  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":3460:3501  require(balanceOf[msg.sender] >= _value ) */\n      iszero\n      iszero\n      tag_114\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_114:\n        /* \"contracts/ETHREN.sol\":3580:3589  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3580:3594  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3590:3593  _to */\n      dup4\n        /* \"contracts/ETHREN.sol\":3580:3594  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":3570:3576  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":3553:3562  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3553:3567  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3563:3566  _to */\n      dup6\n        /* \"contracts/ETHREN.sol\":3553:3567  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":3553:3576  balanceOf[_to] + _value */\n      add\n        /* \"contracts/ETHREN.sol\":3553:3594  balanceOf[_to] + _value >= balanceOf[_to] */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":3545:3595  require(balanceOf[_to] + _value >= balanceOf[_to]) */\n      iszero\n      iszero\n      tag_115\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_115:\n        /* \"contracts/ETHREN.sol\":3655:3688  balanceOf[msg.sender].sub(_value) */\n      tag_116\n        /* \"contracts/ETHREN.sol\":3681:3687  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":3655:3664  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3655:3676  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3665:3675  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":3655:3676  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":3655:3680  balanceOf[msg.sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":3655:3688  balanceOf[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/ETHREN.sol\":3631:3640  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3631:3652  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3641:3651  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":3631:3652  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":3631:3688  balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":3744:3770  balanceOf[_to].add(_value) */\n      tag_117\n        /* \"contracts/ETHREN.sol\":3763:3769  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":3744:3753  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3744:3758  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3754:3757  _to */\n      dup6\n        /* \"contracts/ETHREN.sol\":3744:3758  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":3744:3762  balanceOf[_to].add */\n      tag_90\n      swap1\n        /* \"contracts/ETHREN.sol\":3744:3770  balanceOf[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/ETHREN.sol\":3727:3736  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":3727:3741  balanceOf[_to] */\n      0x0\n        /* \"contracts/ETHREN.sol\":3737:3740  _to */\n      dup5\n        /* \"contracts/ETHREN.sol\":3727:3741  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":3727:3770  balanceOf[_to] = balanceOf[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":3836:3839  _to */\n      dup2\n        /* \"contracts/ETHREN.sol\":3815:3848  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":3824:3834  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":3815:3848  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ETHREN.sol\":3841:3847  _value */\n      dup4\n        /* \"contracts/ETHREN.sol\":3815:3848  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ETHREN.sol\":3335:3915  function transfer(address _to, uint256 _value) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1443:1487  mapping (address => uint256) public freezeOf */\n    tag_66:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":5378:5801  function freeze(uint256 _value) public returns (bool) {\r... */\n    tag_69:\n        /* \"contracts/ETHREN.sol\":5426:5430  bool */\n      0x0\n        /* \"contracts/ETHREN.sol\":5476:5482  _value */\n      dup2\n        /* \"contracts/ETHREN.sol\":5451:5460  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5451:5472  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5461:5471  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5451:5472  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5451:5482  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":5443:5483  require(balanceOf[msg.sender] >= _value) */\n      iszero\n      iszero\n      tag_119\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_119:\n        /* \"contracts/ETHREN.sol\":5544:5545  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":5535:5541  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5535:5545  _value > 0 */\n      gt\n        /* \"contracts/ETHREN.sol\":5527:5546  require(_value > 0) */\n      iszero\n      iszero\n      tag_120\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_120:\n        /* \"contracts/ETHREN.sol\":5583:5616  balanceOf[msg.sender].sub(_value) */\n      tag_121\n        /* \"contracts/ETHREN.sol\":5609:5615  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5583:5592  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5583:5604  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5593:5603  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5583:5604  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5583:5608  balanceOf[msg.sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/ETHREN.sol\":5583:5616  balanceOf[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/ETHREN.sol\":5559:5568  balanceOf */\n      0x5\n        /* \"contracts/ETHREN.sol\":5559:5580  balanceOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5569:5579  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5559:5580  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":5559:5616  balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":5678:5710  freezeOf[msg.sender].add(_value) */\n      tag_122\n        /* \"contracts/ETHREN.sol\":5703:5709  _value */\n      dup3\n        /* \"contracts/ETHREN.sol\":5678:5686  freezeOf */\n      0x6\n        /* \"contracts/ETHREN.sol\":5678:5698  freezeOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5687:5697  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5678:5698  freezeOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ETHREN.sol\":5678:5702  freezeOf[msg.sender].add */\n      tag_90\n      swap1\n        /* \"contracts/ETHREN.sol\":5678:5710  freezeOf[msg.sender].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/ETHREN.sol\":5655:5663  freezeOf */\n      0x6\n        /* \"contracts/ETHREN.sol\":5655:5675  freezeOf[msg.sender] */\n      0x0\n        /* \"contracts/ETHREN.sol\":5664:5674  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5655:5675  freezeOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ETHREN.sol\":5655:5710  freezeOf[msg.sender] = freezeOf[msg.sender].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":5752:5762  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":5745:5771  Freeze(msg.sender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0\n        /* \"contracts/ETHREN.sol\":5764:5770  _value */\n      dup4\n        /* \"contracts/ETHREN.sol\":5745:5771  Freeze(msg.sender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ETHREN.sol\":5789:5793  true */\n      0x1\n        /* \"contracts/ETHREN.sol\":5782:5793  return true */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":5378:5801  function freeze(uint256 _value) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":1494:1560  mapping (address => mapping (address => uint256)) public allowance */\n    tag_72:\n      mstore(0x20, 0x7)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":3124:3305  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_75:\n        /* \"contracts/ETHREN.sol\":2923:2928  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":2909:2919  msg.sender */\n      caller\n        /* \"contracts/ETHREN.sol\":2909:2928  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ETHREN.sol\":2901:2929  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_124\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_124:\n        /* \"contracts/ETHREN.sol\":3223:3224  0 */\n      0x0\n        /* \"contracts/ETHREN.sol\":3203:3225  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":3203:3211  newOwner */\n      dup2\n        /* \"contracts/ETHREN.sol\":3203:3225  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ETHREN.sol\":3195:3226  require(newOwner != address(0)) */\n      iszero\n      iszero\n      tag_126\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/ETHREN.sol\":3263:3271  newOwner */\n      dup1\n        /* \"contracts/ETHREN.sol\":3235:3272  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":3256:3261  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ETHREN.sol\":3235:3272  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ETHREN.sol\":3289:3297  newOwner */\n      dup1\n        /* \"contracts/ETHREN.sol\":3281:3286  owner */\n      0x4\n      0x0\n        /* \"contracts/ETHREN.sol\":3281:3297  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ETHREN.sol\":3124:3305  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":790:903  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/ETHREN.sol\":848:855  uint256 */\n      0x0\n        /* \"contracts/ETHREN.sol\":876:877  a */\n      dup3\n        /* \"contracts/ETHREN.sol\":871:872  b */\n      dup3\n        /* \"contracts/ETHREN.sol\":871:877  b <= a */\n      gt\n      iszero\n        /* \"contracts/ETHREN.sol\":864:878  assert(b <= a) */\n      iszero\n      iszero\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n        /* \"contracts/ETHREN.sol\":896:897  b */\n      dup2\n        /* \"contracts/ETHREN.sol\":892:893  a */\n      dup4\n        /* \"contracts/ETHREN.sol\":892:897  a - b */\n      sub\n        /* \"contracts/ETHREN.sol\":885:897  return a - b */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":790:903  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ETHREN.sol\":909:1042  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_90:\n        /* \"contracts/ETHREN.sol\":967:974  uint256 */\n      0x0\n        /* \"contracts/ETHREN.sol\":983:992  uint256 c */\n      dup1\n        /* \"contracts/ETHREN.sol\":999:1000  b */\n      dup3\n        /* \"contracts/ETHREN.sol\":995:996  a */\n      dup5\n        /* \"contracts/ETHREN.sol\":995:1000  a + b */\n      add\n        /* \"contracts/ETHREN.sol\":983:1000  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ETHREN.sol\":1019:1020  a */\n      dup4\n        /* \"contracts/ETHREN.sol\":1014:1015  c */\n      dup2\n        /* \"contracts/ETHREN.sol\":1014:1020  c >= a */\n      lt\n      iszero\n        /* \"contracts/ETHREN.sol\":1007:1021  assert(c >= a) */\n      iszero\n      iszero\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n        /* \"contracts/ETHREN.sol\":1035:1036  c */\n      dup1\n        /* \"contracts/ETHREN.sol\":1028:1036  return c */\n      swap2\n      pop\n        /* \"contracts/ETHREN.sol\":909:1042  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208e8caa0e993042331d65225798c2962aec50861f164e777d170e516317ef1d150029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051604080620019fb833981018060405281019080805190602001909291908051906020019092919050505081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816003819055506040805190810160405280600e81526020017f457468657265756d2052656e657700000000000000000000000000000000000081525060009080519060200190620000d79291906200018a565b506040805190810160405280600681526020017f45544852454e000000000000000000000000000000000000000000000000000081525060019080519060200190620001259291906200018a565b5080600260006101000a81548160ff021916908360ff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000239565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001cd57805160ff1916838001178555620001fe565b82800160010185558215620001fe579182015b82811115620001fd578251825591602001919060010190620001e0565b5b5090506200020d919062000211565b5090565b6200023691905b808211156200023257600081600090555060010162000218565b5090565b90565b6117b280620002496000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e8578063095ea7b31461017857806318160ddd146101dd57806323b872dd14610208578063313ce5671461028d5780633bed33ce146102be57806342966c68146102eb5780636623fc461461033057806370a08231146103755780638da5cb5b146103cc57806395d89b4114610423578063a9059cbb146104b3578063cd4217c114610500578063d7a78db814610557578063dd62ed3e1461059c578063f2fde38b14610613575b005b3480156100f457600080fd5b506100fd610656565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013d578082015181840152602081019050610122565b50505050905090810190601f16801561016a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018457600080fd5b506101c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f4565b604051808215151515815260200191505060405180910390f35b3480156101e957600080fd5b506101f261078f565b6040518082815260200191505060405180910390f35b34801561021457600080fd5b50610273600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610795565b604051808215151515815260200191505060405180910390f35b34801561029957600080fd5b506102a2610bdc565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ca57600080fd5b506102e960048036038101908080359060200190929190505050610bef565b005b3480156102f757600080fd5b5061031660048036038101908080359060200190929190505050610cb7565b604051808215151515815260200191505060405180910390f35b34801561033c57600080fd5b5061035b60048036038101908080359060200190929190505050610e79565b604051808215151515815260200191505060405180910390f35b34801561038157600080fd5b506103b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611059565b6040518082815260200191505060405180910390f35b3480156103d857600080fd5b506103e1611071565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042f57600080fd5b50610438611097565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047857808201518184015260208101905061045d565b50505050905090810190601f1680156104a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104bf57600080fd5b506104fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611135565b005b34801561050c57600080fd5b50610541600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113da565b6040518082815260200191505060405180910390f35b34801561056357600080fd5b50610582600480360381019080803590602001909291905050506113f2565b604051808215151515815260200191505060405180910390f35b3480156105a857600080fd5b506105fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115d2565b6040518082815260200191505060405180910390f35b34801561061f57600080fd5b50610654600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f7565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b505050505081565b6000808211151561070457600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60035481565b6000808373ffffffffffffffffffffffffffffffffffffffff16141515156107bc57600080fd5b6000821115156107cb57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561081957600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401101515156108a857600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561093357600080fd5b61098582600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a1a82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aec82600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c4b57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cb3573d6000803e3d6000fd5b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1557600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610d6357600080fd5b600082111515610d7257600080fd5b610dc482600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e1c8260035461174f90919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ec957600080fd5b600082111515610ed857600080fd5b610f2a82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbf82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a260019050919050565b60056020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112d5780601f106111025761010080835404028352916020019161112d565b820191906000526020600020905b81548152906001019060200180831161111057829003601f168201915b505050505081565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561115b57600080fd5b60008111151561116a57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156111b857600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561124757600080fd5b61129981600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061132e81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60066020528060005260406000206000915090505481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561144257600080fd5b60008211151561145157600080fd5b6114a382600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153882600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0836040518082815260200191505060405180910390a260019050919050565b6007602052816000526040600020602052806000526040600020600091509150505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561165357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561168f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561175d57fe5b818303905092915050565b600080828401905083811015151561177c57fe5b80915050929150505600a165627a7a723058208e8caa0e993042331d65225798c2962aec50861f164e777d170e516317ef1d150029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 PUSH3 0x19FB DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x457468657265756D2052656E6577000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD7 SWAP3 SWAP2 SWAP1 PUSH3 0x18A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45544852454E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x125 SWAP3 SWAP2 SWAP1 PUSH3 0x18A JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x239 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1CD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1FE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1FE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1FD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x20D SWAP2 SWAP1 PUSH3 0x211 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x236 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x218 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x17B2 DUP1 PUSH3 0x249 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x6623FC46 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xCD4217C1 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xD7A78DB8 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x613 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x122 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1135 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x582 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO ISZERO ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA1A DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAEC DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC4 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE1C DUP3 PUSH1 0x3 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2A DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFBF DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2CFCE4AF01BCB9D6CF6C84EE1B7C491100B8695368264146A94D71E10A63083F DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x112D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1102 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x112D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1110 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO ISZERO ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1299 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x132E DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A3 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1538 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF97A274FACE0B5517365AD396B1FDBA6F68BD3135EF603E44272ADBA3AF5A1E0 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x175D JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x177C JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 DUP13 0xaa 0xe SWAP10 ADDRESS TIMESTAMP CALLER SAR PUSH6 0x225798C2962A 0xec POP DUP7 0x1f AND 0x4e PUSH24 0x7D170E516317EF1D15002900000000000000000000000000 ",
							"sourceMap": "1142:5288:0:-;;;2305:473;8:9:-1;5:2;;;30:1;27;20:12;5:2;2305:473:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:13;2383:9;:21;2393:10;2383:21;;;;;;;;;;;;;;;:37;;;;2484:13;2470:11;:27;;;;2531:23;;;;;;;;;;;;;;;;;;:4;:23;;;;;;;;;;;;:::i;:::-;;2604:17;;;;;;;;;;;;;;;;;;:6;:17;;;;;;;;;;;;:::i;:::-;;2685:12;2674:8;;:23;;;;;;;;;;;;;;;;;;2760:10;2752:5;;:18;;;;;;;;;;;;;;;;;;2305:473;;1142:5288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e8578063095ea7b31461017857806318160ddd146101dd57806323b872dd14610208578063313ce5671461028d5780633bed33ce146102be57806342966c68146102eb5780636623fc461461033057806370a08231146103755780638da5cb5b146103cc57806395d89b4114610423578063a9059cbb146104b3578063cd4217c114610500578063d7a78db814610557578063dd62ed3e1461059c578063f2fde38b14610613575b005b3480156100f457600080fd5b506100fd610656565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013d578082015181840152602081019050610122565b50505050905090810190601f16801561016a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018457600080fd5b506101c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f4565b604051808215151515815260200191505060405180910390f35b3480156101e957600080fd5b506101f261078f565b6040518082815260200191505060405180910390f35b34801561021457600080fd5b50610273600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610795565b604051808215151515815260200191505060405180910390f35b34801561029957600080fd5b506102a2610bdc565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ca57600080fd5b506102e960048036038101908080359060200190929190505050610bef565b005b3480156102f757600080fd5b5061031660048036038101908080359060200190929190505050610cb7565b604051808215151515815260200191505060405180910390f35b34801561033c57600080fd5b5061035b60048036038101908080359060200190929190505050610e79565b604051808215151515815260200191505060405180910390f35b34801561038157600080fd5b506103b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611059565b6040518082815260200191505060405180910390f35b3480156103d857600080fd5b506103e1611071565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042f57600080fd5b50610438611097565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047857808201518184015260208101905061045d565b50505050905090810190601f1680156104a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104bf57600080fd5b506104fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611135565b005b34801561050c57600080fd5b50610541600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113da565b6040518082815260200191505060405180910390f35b34801561056357600080fd5b50610582600480360381019080803590602001909291905050506113f2565b604051808215151515815260200191505060405180910390f35b3480156105a857600080fd5b506105fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115d2565b6040518082815260200191505060405180910390f35b34801561061f57600080fd5b50610654600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f7565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b505050505081565b6000808211151561070457600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60035481565b6000808373ffffffffffffffffffffffffffffffffffffffff16141515156107bc57600080fd5b6000821115156107cb57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561081957600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401101515156108a857600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561093357600080fd5b61098582600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a1a82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aec82600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c4b57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cb3573d6000803e3d6000fd5b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1557600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610d6357600080fd5b600082111515610d7257600080fd5b610dc482600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e1c8260035461174f90919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ec957600080fd5b600082111515610ed857600080fd5b610f2a82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbf82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a260019050919050565b60056020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112d5780601f106111025761010080835404028352916020019161112d565b820191906000526020600020905b81548152906001019060200180831161111057829003601f168201915b505050505081565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561115b57600080fd5b60008111151561116a57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156111b857600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561124757600080fd5b61129981600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061132e81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60066020528060005260406000206000915090505481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561144257600080fd5b60008211151561145157600080fd5b6114a382600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174f90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153882600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176890919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0836040518082815260200191505060405180910390a260019050919050565b6007602052816000526040600020602052806000526040600020600091509150505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561165357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561168f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561175d57fe5b818303905092915050565b600080828401905083811015151561177c57fe5b80915050929150505600a165627a7a723058208e8caa0e993042331d65225798c2962aec50861f164e777d170e516317ef1d150029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x6623FC46 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xCD4217C1 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xD7A78DB8 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x613 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x122 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1135 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x582 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15F7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO ISZERO ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x985 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA1A DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAEC DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC4 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE1C DUP3 PUSH1 0x3 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2A DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFBF DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2CFCE4AF01BCB9D6CF6C84EE1B7C491100B8695368264146A94D71E10A63083F DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x112D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1102 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x112D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1110 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO ISZERO ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1299 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x132E DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A3 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1538 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF97A274FACE0B5517365AD396B1FDBA6F68BD3135EF603E44272ADBA3AF5A1E0 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x175D JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x177C JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP15 DUP13 0xaa 0xe SWAP10 ADDRESS TIMESTAMP CALLER SAR PUSH6 0x225798C2962A 0xec POP DUP7 0x1f AND 0x4e PUSH24 0x7D170E516317EF1D15002900000000000000000000000000 ",
							"sourceMap": "1142:5288:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1198:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1198:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:184;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3993:184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1278:26:0;;;;;;;;;;;;;;;;;;;;;;;4233:718;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:718:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;6263:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6263:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;4959:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4959:411:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5809:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5809:403:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1391:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1311:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1223:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:580;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3335:580:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1443:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5378:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5378:423:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3124:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3124:181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3993:184::-;4060:4;4094:1;4085:6;:10;4077:19;;;;;;;;4141:6;4107:9;:21;4117:10;4107:21;;;;;;;;;;;;;;;:31;4129:8;4107:31;;;;;;;;;;;;;;;:40;;;;4165:4;4158:11;;3993:184;;;;:::o;1278:26::-;;;;:::o;4233:718::-;4315:4;4347:3;4340;:10;;;;4332:19;;;;;;;;4379:1;4370:6;:10;4362:19;;;;;;;;4420:6;4400:9;:16;4410:5;4400:16;;;;;;;;;;;;;;;;:26;;4392:36;;;;;;;;4507:9;:14;4517:3;4507:14;;;;;;;;;;;;;;;;4497:6;4480:9;:14;4490:3;4480:14;;;;;;;;;;;;;;;;:23;:41;;4472:50;;;;;;;;4574:9;:16;4584:5;4574:16;;;;;;;;;;;;;;;:28;4591:10;4574:28;;;;;;;;;;;;;;;;4564:6;:38;;4556:47;;;;;;;;4654:28;4675:6;4654:9;:16;4664:5;4654:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;4635:9;:16;4645:5;4635:16;;;;;;;;;;;;;;;:47;;;;4740:26;4759:6;4740:9;:14;4750:3;4740:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;4723:9;:14;4733:3;4723:14;;;;;;;;;;;;;;;:43;;;;4842:40;4875:6;4842:9;:16;4852:5;4842:16;;;;;;;;;;;;;;;:28;4859:10;4842:28;;;;;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;4811:9;:16;4821:5;4811:16;;;;;;;;;;;;;;;:28;4828:10;4811:28;;;;;;;;;;;;;;;:71;;;;4909:3;4893:28;;4902:5;4893:28;;;4914:6;4893:28;;;;;;;;;;;;;;;;;;4939:4;4932:11;;4233:718;;;;;:::o;1250:21::-;;;;;;;;;;;;;:::o;6263:97::-;2923:5;;;;;;;;;;;2909:19;;:10;:19;;;2901:28;;;;;;;;6330:5;;;;;;;;;;;:14;;:22;6345:6;6330:22;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6330:22:0;6263:97;:::o;4959:411::-;5015:4;2923:5;;;;;;;;;;;2909:19;;:10;:19;;;2901:28;;;;;;;;5065:6;5040:9;:21;5050:10;5040:21;;;;;;;;;;;;;;;;:31;;5032:40;;;;;;;;5133:1;5124:6;:10;5116:19;;;;;;;;5172:33;5198:6;5172:9;:21;5182:10;5172:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;5148:9;:21;5158:10;5148:21;;;;;;;;;;;;;;;:57;;;;5259:23;5275:6;5259:11;;:15;;:23;;;;:::i;:::-;5245:11;:37;;;;5321:10;5316:24;;;5333:6;5316:24;;;;;;;;;;;;;;;;;;5358:4;5351:11;;4959:411;;;:::o;5809:403::-;5859:4;5908:6;5884:8;:20;5893:10;5884:20;;;;;;;;;;;;;;;;:30;;5876:39;;;;;;;;5977:1;5968:6;:10;5960:19;;;;;;;;6015:32;6040:6;6015:8;:20;6024:10;6015:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5992:8;:20;6001:10;5992:20;;;;;;;;;;;;;;;:55;;;;6110:33;6136:6;6110:9;:21;6120:10;6110:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;6086:9;:21;6096:10;6086:21;;;;;;;;;;;;;;;:57;;;;6163:10;6154:28;;;6175:6;6154:28;;;;;;;;;;;;;;;;;;6200:4;6193:11;;5809:403;;;:::o;1391:45::-;;;;;;;;;;;;;;;;;:::o;1311:20::-;;;;;;;;;;;;;:::o;1223:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3335:580::-;3415:3;3408;:10;;;;3400:19;;;;;;;;3447:1;3438:6;:10;3430:19;;;;;;;;3493:6;3468:9;:21;3478:10;3468:21;;;;;;;;;;;;;;;;:31;;3460:41;;;;;;;;3580:9;:14;3590:3;3580:14;;;;;;;;;;;;;;;;3570:6;3553:9;:14;3563:3;3553:14;;;;;;;;;;;;;;;;:23;:41;;3545:50;;;;;;;;3655:33;3681:6;3655:9;:21;3665:10;3655:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;3631:9;:21;3641:10;3631:21;;;;;;;;;;;;;;;:57;;;;3744:26;3763:6;3744:9;:14;3754:3;3744:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;3727:9;:14;3737:3;3727:14;;;;;;;;;;;;;;;:43;;;;3836:3;3815:33;;3824:10;3815:33;;;3841:6;3815:33;;;;;;;;;;;;;;;;;;3335:580;;:::o;1443:44::-;;;;;;;;;;;;;;;;;:::o;5378:423::-;5426:4;5476:6;5451:9;:21;5461:10;5451:21;;;;;;;;;;;;;;;;:31;;5443:40;;;;;;;;5544:1;5535:6;:10;5527:19;;;;;;;;5583:33;5609:6;5583:9;:21;5593:10;5583:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;5559:9;:21;5569:10;5559:21;;;;;;;;;;;;;;;:57;;;;5678:32;5703:6;5678:8;:20;5687:10;5678:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5655:8;:20;5664:10;5655:20;;;;;;;;;;;;;;;:55;;;;5752:10;5745:26;;;5764:6;5745:26;;;;;;;;;;;;;;;;;;5789:4;5782:11;;5378:423;;;:::o;1494:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3124:181::-;2923:5;;;;;;;;;;;2909:19;;:10;:19;;;2901:28;;;;;;;;3223:1;3203:22;;:8;:22;;;;3195:31;;;;;;;;3263:8;3235:37;;3256:5;;;;;;;;;;;3235:37;;;;;;;;;;;;3289:8;3281:5;;:16;;;;;;;;;;;;;;;;;;3124:181;:::o;790:113::-;848:7;876:1;871;:6;;864:14;;;;;;896:1;892;:5;885:12;;790:113;;;;:::o;909:133::-;967:7;983:9;999:1;995;:5;983:17;;1019:1;1014;:6;;1007:14;;;;;;1035:1;1028:8;;909:133;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "415",
								"allowance(address,address)": "938",
								"approve(address,uint256)": "20554",
								"balanceOf(address)": "708",
								"burn(uint256)": "infinite",
								"decimals()": "530",
								"freeze(uint256)": "infinite",
								"freezeOf(address)": "796",
								"name()": "infinite",
								"owner()": "640",
								"symbol()": "infinite",
								"totalSupply()": "438",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "22895",
								"unfreeze(uint256)": "infinite",
								"withdrawEther(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "MSTORE"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "MLOAD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP4"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "CODECOPY"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP2"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "ADD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "MSTORE"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP2"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "ADD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "MLOAD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "ADD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP3"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP2"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "DUP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "MLOAD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "ADD"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP3"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP2"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "SWAP1"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 2407,
									"end": 2420,
									"name": "DUP2"
								},
								{
									"begin": 2383,
									"end": 2392,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2393,
									"end": 2403,
									"name": "CALLER"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "AND"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "AND"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "DUP2"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "MSTORE"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "ADD"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "SWAP1"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "DUP2"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "MSTORE"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "ADD"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2383,
									"end": 2404,
									"name": "KECCAK256"
								},
								{
									"begin": 2383,
									"end": 2420,
									"name": "DUP2"
								},
								{
									"begin": 2383,
									"end": 2420,
									"name": "SWAP1"
								},
								{
									"begin": 2383,
									"end": 2420,
									"name": "SSTORE"
								},
								{
									"begin": 2383,
									"end": 2420,
									"name": "POP"
								},
								{
									"begin": 2484,
									"end": 2497,
									"name": "DUP2"
								},
								{
									"begin": 2470,
									"end": 2481,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2470,
									"end": 2497,
									"name": "DUP2"
								},
								{
									"begin": 2470,
									"end": 2497,
									"name": "SWAP1"
								},
								{
									"begin": 2470,
									"end": 2497,
									"name": "SSTORE"
								},
								{
									"begin": 2470,
									"end": 2497,
									"name": "POP"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "MLOAD"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP2"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "ADD"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "MSTORE"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP2"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "MSTORE"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "ADD"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "457468657265756D2052656E6577000000000000000000000000000000000000"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP2"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "MSTORE"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "POP"
								},
								{
									"begin": 2531,
									"end": 2535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "DUP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "MLOAD"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "ADD"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP3"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP2"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "SWAP1"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "JUMPDEST"
								},
								{
									"begin": 2531,
									"end": 2554,
									"name": "POP"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "MLOAD"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP2"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "ADD"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "MSTORE"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP2"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "MSTORE"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "ADD"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "45544852454E0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP2"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "MSTORE"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "POP"
								},
								{
									"begin": 2604,
									"end": 2610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "DUP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "MLOAD"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "ADD"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP3"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP2"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "SWAP1"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "JUMPDEST"
								},
								{
									"begin": 2604,
									"end": 2621,
									"name": "POP"
								},
								{
									"begin": 2685,
									"end": 2697,
									"name": "DUP1"
								},
								{
									"begin": 2674,
									"end": 2682,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2674,
									"end": 2682,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "EXP"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "DUP2"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SLOAD"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "DUP2"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "MUL"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "NOT"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "AND"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SWAP1"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "DUP4"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "AND"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "MUL"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "OR"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SWAP1"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SSTORE"
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "POP"
								},
								{
									"begin": 2760,
									"end": 2770,
									"name": "CALLER"
								},
								{
									"begin": 2752,
									"end": 2757,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2752,
									"end": 2757,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "EXP"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "DUP2"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "SLOAD"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "DUP2"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "MUL"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "NOT"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "AND"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "SWAP1"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "DUP4"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "AND"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "MUL"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "OR"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "SWAP1"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "SSTORE"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "POP"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 2305,
									"end": 2778,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SLOAD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "AND"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ISZERO"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "MUL"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SUB"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "AND"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DIV"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "KECCAK256"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DIV"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "LT"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPI"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "MLOAD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "NOT"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "AND"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP4"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "OR"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP6"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SSTORE"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP6"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SSTORE"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ISZERO"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPI"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "GT"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ISZERO"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPI"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "MLOAD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SSTORE"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "GT"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ISZERO"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPI"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SSTORE"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "POP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "JUMPDEST"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "CODECOPY"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 6430,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208e8caa0e993042331d65225798c2962aec50861f164e777d170e516317ef1d150029",
									".code": [
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "MSTORE"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "LT"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "SWAP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DIV"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "3BED33CE"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "6623FC46"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "CD4217C1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "D7A78DB8"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "DUP1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "EQ"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "JUMPDEST"
										},
										{
											"begin": 1142,
											"end": 6430,
											"name": "STOP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPI"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "RETURN"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SUB"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "AND"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "JUMP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "MLOAD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP3"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "MSTORE"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "MLOAD"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SUB"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "RETURN"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "JUMP"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "MLOAD"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "DUP3"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "MSTORE"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "SWAP2"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "MLOAD"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "SWAP2"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "SUB"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "SWAP1"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "RETURN"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "JUMPDEST"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SUB"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ADD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "AND"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ADD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP3"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "AND"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ADD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP3"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ADD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP3"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "JUMP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "JUMPDEST"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "MLOAD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP3"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ISZERO"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ISZERO"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ISZERO"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ISZERO"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "MSTORE"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "ADD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "MLOAD"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "DUP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP2"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SUB"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP1"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "RETURN"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "JUMP"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DUP3"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SUB"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "RETURN"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SUB"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "DUP2"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP3"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP2"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "JUMP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "STOP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "JUMPDEST"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SUB"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ADD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ADD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP3"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "JUMP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "JUMPDEST"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "MLOAD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP3"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ISZERO"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ISZERO"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ISZERO"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ISZERO"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "MSTORE"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "ADD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "MLOAD"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "DUP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SUB"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "RETURN"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "JUMPDEST"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SUB"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ADD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ADD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP3"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "JUMP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "JUMPDEST"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "MLOAD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP3"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ISZERO"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ISZERO"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ISZERO"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ISZERO"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "MSTORE"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "ADD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "MLOAD"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "DUP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SUB"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "RETURN"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SUB"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP3"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SUB"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "RETURN"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMPDEST"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "POP"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMP"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMPDEST"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "MLOAD"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP3"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "AND"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "AND"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP2"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "MSTORE"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "ADD"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP2"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "POP"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "POP"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "MLOAD"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP2"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SUB"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "RETURN"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "RETURN"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "JUMPDEST"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SUB"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "DUP2"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "ADD"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "AND"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "ADD"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP3"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP2"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "ADD"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP3"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP2"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "JUMP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "JUMPDEST"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "STOP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "JUMPDEST"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SUB"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "ADD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "AND"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "ADD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP3"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "JUMP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "JUMPDEST"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "MLOAD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP3"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "MSTORE"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "ADD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "MLOAD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SUB"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "RETURN"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "JUMPDEST"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SUB"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ADD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ADD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP3"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "JUMP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "JUMPDEST"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "MLOAD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP3"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ISZERO"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ISZERO"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ISZERO"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ISZERO"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "MSTORE"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "ADD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "MLOAD"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "DUP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SUB"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "RETURN"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SUB"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "AND"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP3"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "AND"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP3"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "JUMP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP3"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "ADD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MLOAD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SUB"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "RETURN"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "JUMPDEST"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "DUP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SUB"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "DUP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "DUP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "AND"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP3"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP2"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "JUMP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "JUMPDEST"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "STOP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPI"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "LT"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPI"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "KECCAK256"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "GT"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPI"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP3"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMPDEST"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "DUP1"
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "DUP3"
										},
										{
											"begin": 4085,
											"end": 4095,
											"name": "GT"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "ISZERO"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "ISZERO"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "JUMPI"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "DUP1"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "REVERT"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "JUMPDEST"
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4116,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4127,
											"name": "CALLER"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "ADD"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "SWAP1"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "ADD"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "KECCAK256"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4137,
											"name": "DUP6"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "AND"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "MSTORE"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "ADD"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "SWAP1"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "MSTORE"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "ADD"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "KECCAK256"
										},
										{
											"begin": 4107,
											"end": 4147,
											"name": "DUP2"
										},
										{
											"begin": 4107,
											"end": 4147,
											"name": "SWAP1"
										},
										{
											"begin": 4107,
											"end": 4147,
											"name": "SSTORE"
										},
										{
											"begin": 4107,
											"end": 4147,
											"name": "POP"
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4169,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 3993,
											"end": 4177,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "SLOAD"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1278,
											"end": 1304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "JUMPDEST"
										},
										{
											"begin": 4315,
											"end": 4319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4350,
											"name": "DUP1"
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "DUP4"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "AND"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "EQ"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "ISZERO"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "ISZERO"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "ISZERO"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "JUMPI"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "DUP1"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "REVERT"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4332,
											"end": 4351,
											"name": "JUMPDEST"
										},
										{
											"begin": 4379,
											"end": 4380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP3"
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "GT"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "ISZERO"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "ISZERO"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "JUMPI"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "DUP1"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "REVERT"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4362,
											"end": 4381,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4409,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP7"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "AND"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "AND"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "SWAP1"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "KECCAK256"
										},
										{
											"begin": 4400,
											"end": 4416,
											"name": "SLOAD"
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "LT"
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "ISZERO"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "JUMPI"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "REVERT"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "JUMPDEST"
										},
										{
											"begin": 4507,
											"end": 4516,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4520,
											"name": "DUP5"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "AND"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "AND"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP2"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "MSTORE"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "ADD"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "SWAP1"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP2"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "MSTORE"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "ADD"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "KECCAK256"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "SLOAD"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP3"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "DUP7"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "AND"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "AND"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "DUP2"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "MSTORE"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "ADD"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "SWAP1"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "DUP2"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "MSTORE"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "ADD"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "KECCAK256"
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "SLOAD"
										},
										{
											"begin": 4480,
											"end": 4503,
											"name": "ADD"
										},
										{
											"begin": 4480,
											"end": 4521,
											"name": "LT"
										},
										{
											"begin": 4480,
											"end": 4521,
											"name": "ISZERO"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "ISZERO"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "JUMPI"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "DUP1"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "REVERT"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4472,
											"end": 4522,
											"name": "JUMPDEST"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4589,
											"name": "DUP6"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "AND"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "AND"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "DUP2"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "MSTORE"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "ADD"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "SWAP1"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "DUP2"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "MSTORE"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "ADD"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4590,
											"name": "KECCAK256"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4601,
											"name": "CALLER"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "AND"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "AND"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "SWAP1"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "KECCAK256"
										},
										{
											"begin": 4574,
											"end": 4602,
											"name": "SLOAD"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP3"
										},
										{
											"begin": 4564,
											"end": 4602,
											"name": "GT"
										},
										{
											"begin": 4564,
											"end": 4602,
											"name": "ISZERO"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "ISZERO"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "ISZERO"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "JUMPI"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "REVERT"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 4556,
											"end": 4603,
											"name": "JUMPDEST"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP3"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP8"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "AND"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "AND"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "DUP2"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "MSTORE"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "ADD"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "SWAP1"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "DUP2"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "MSTORE"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "ADD"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "KECCAK256"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "SLOAD"
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SWAP1"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "AND"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "JUMPDEST"
										},
										{
											"begin": 4635,
											"end": 4644,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4650,
											"name": "DUP7"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "AND"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "AND"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "DUP2"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "MSTORE"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "ADD"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "SWAP1"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "DUP2"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "MSTORE"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "ADD"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "KECCAK256"
										},
										{
											"begin": 4635,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4635,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4635,
											"end": 4682,
											"name": "SSTORE"
										},
										{
											"begin": 4635,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 4759,
											"end": 4765,
											"name": "DUP3"
										},
										{
											"begin": 4740,
											"end": 4749,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4753,
											"name": "DUP7"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "AND"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "AND"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "MSTORE"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "MSTORE"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "KECCAK256"
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "SLOAD"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "SWAP2"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "SWAP1"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "AND"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "JUMPDEST"
										},
										{
											"begin": 4723,
											"end": 4732,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4736,
											"name": "DUP6"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "AND"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "AND"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "DUP2"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "MSTORE"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "ADD"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "DUP2"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "MSTORE"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "ADD"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "KECCAK256"
										},
										{
											"begin": 4723,
											"end": 4766,
											"name": "DUP2"
										},
										{
											"begin": 4723,
											"end": 4766,
											"name": "SWAP1"
										},
										{
											"begin": 4723,
											"end": 4766,
											"name": "SSTORE"
										},
										{
											"begin": 4723,
											"end": 4766,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP3"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4857,
											"name": "DUP8"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4858,
											"name": "KECCAK256"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4869,
											"name": "CALLER"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "KECCAK256"
										},
										{
											"begin": 4842,
											"end": 4870,
											"name": "SLOAD"
										},
										{
											"begin": 4842,
											"end": 4874,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4842,
											"end": 4874,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 4842,
											"end": 4882,
											"name": "JUMPDEST"
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "DUP7"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "AND"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "AND"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "SWAP1"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4827,
											"name": "KECCAK256"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4838,
											"name": "CALLER"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "AND"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "AND"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "MSTORE"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "ADD"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "SWAP1"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "MSTORE"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "ADD"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4839,
											"name": "KECCAK256"
										},
										{
											"begin": 4811,
											"end": 4882,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4882,
											"name": "SWAP1"
										},
										{
											"begin": 4811,
											"end": 4882,
											"name": "SSTORE"
										},
										{
											"begin": 4811,
											"end": 4882,
											"name": "POP"
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP3"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "AND"
										},
										{
											"begin": 4902,
											"end": 4907,
											"name": "DUP5"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "AND"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP5"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "MLOAD"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "DUP1"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "DUP3"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "DUP2"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "MSTORE"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "ADD"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "SWAP2"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "POP"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "POP"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "MLOAD"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "DUP1"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "SWAP2"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "SUB"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "SWAP1"
										},
										{
											"begin": 4893,
											"end": 4921,
											"name": "LOG3"
										},
										{
											"begin": 4939,
											"end": 4943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4932,
											"end": 4943,
											"name": "SWAP1"
										},
										{
											"begin": 4932,
											"end": 4943,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP4"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "SWAP3"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "POP"
										},
										{
											"begin": 4233,
											"end": 4951,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "EXP"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DIV"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "JUMPDEST"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SLOAD"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "EXP"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DIV"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "CALLER"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "EQ"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPI"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "REVERT"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "SLOAD"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "EXP"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "DIV"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "AND"
										},
										{
											"begin": 6330,
											"end": 6344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6330,
											"end": 6344,
											"name": "AND"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "SWAP1"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP2"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "ISZERO"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "MUL"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "SWAP1"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "MLOAD"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "MLOAD"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP1"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP4"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "SUB"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP2"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP6"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP9"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "DUP9"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "CALL"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "SWAP4"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "POP"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "POP"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "POP"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "POP"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6360,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "JUMPDEST"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SLOAD"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "EXP"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DIV"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "CALLER"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "EQ"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPI"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "REVERT"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": 5065,
											"end": 5071,
											"name": "DUP2"
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "CALLER"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "AND"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "AND"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "DUP2"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "MSTORE"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "ADD"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "SWAP1"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "DUP2"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "MSTORE"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "ADD"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "KECCAK256"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "SLOAD"
										},
										{
											"begin": 5040,
											"end": 5071,
											"name": "LT"
										},
										{
											"begin": 5040,
											"end": 5071,
											"name": "ISZERO"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "JUMPI"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "REVERT"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5032,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP3"
										},
										{
											"begin": 5124,
											"end": 5134,
											"name": "GT"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "ISZERO"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "ISZERO"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "JUMPI"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "DUP1"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "REVERT"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "JUMPDEST"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP3"
										},
										{
											"begin": 5172,
											"end": 5181,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5192,
											"name": "CALLER"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "AND"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "AND"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "DUP2"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "MSTORE"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "ADD"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "SWAP1"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "DUP2"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "MSTORE"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "ADD"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "KECCAK256"
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "SLOAD"
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "SWAP1"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "SWAP2"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "SWAP1"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "AND"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5172,
											"end": 5205,
											"name": "JUMPDEST"
										},
										{
											"begin": 5148,
											"end": 5157,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5168,
											"name": "CALLER"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "AND"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "AND"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "MSTORE"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "MSTORE"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "KECCAK256"
										},
										{
											"begin": 5148,
											"end": 5205,
											"name": "DUP2"
										},
										{
											"begin": 5148,
											"end": 5205,
											"name": "SWAP1"
										},
										{
											"begin": 5148,
											"end": 5205,
											"name": "SSTORE"
										},
										{
											"begin": 5148,
											"end": 5205,
											"name": "POP"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP3"
										},
										{
											"begin": 5259,
											"end": 5270,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5259,
											"end": 5270,
											"name": "SLOAD"
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5259,
											"end": 5274,
											"name": "SWAP1"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "SWAP2"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "SWAP1"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "AND"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5259,
											"end": 5282,
											"name": "JUMPDEST"
										},
										{
											"begin": 5245,
											"end": 5256,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "DUP2"
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "SWAP1"
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "SSTORE"
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "POP"
										},
										{
											"begin": 5321,
											"end": 5331,
											"name": "CALLER"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "AND"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH",
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 5333,
											"end": 5339,
											"name": "DUP4"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "MLOAD"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "DUP1"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "DUP3"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "DUP2"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "MSTORE"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "ADD"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "SWAP2"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "POP"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "POP"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "MLOAD"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "DUP1"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "SWAP2"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "SUB"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "SWAP1"
										},
										{
											"begin": 5316,
											"end": 5340,
											"name": "LOG2"
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "SWAP1"
										},
										{
											"begin": 5351,
											"end": 5362,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP2"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "SWAP1"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "POP"
										},
										{
											"begin": 4959,
											"end": 5370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "JUMPDEST"
										},
										{
											"begin": 5859,
											"end": 5863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5914,
											"name": "DUP2"
										},
										{
											"begin": 5884,
											"end": 5892,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5903,
											"name": "CALLER"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "AND"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "AND"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "DUP2"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "MSTORE"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "ADD"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "SWAP1"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "DUP2"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "MSTORE"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "ADD"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "KECCAK256"
										},
										{
											"begin": 5884,
											"end": 5904,
											"name": "SLOAD"
										},
										{
											"begin": 5884,
											"end": 5914,
											"name": "LT"
										},
										{
											"begin": 5884,
											"end": 5914,
											"name": "ISZERO"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "ISZERO"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "ISZERO"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "JUMPI"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "DUP1"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "REVERT"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5876,
											"end": 5915,
											"name": "JUMPDEST"
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP3"
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "GT"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "JUMPI"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "DUP1"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "REVERT"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "JUMPDEST"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "DUP3"
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6034,
											"name": "CALLER"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "AND"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "AND"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "MSTORE"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "ADD"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "SWAP1"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "MSTORE"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "ADD"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "KECCAK256"
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "SLOAD"
										},
										{
											"begin": 6015,
											"end": 6039,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6015,
											"end": 6039,
											"name": "SWAP1"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "SWAP2"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "SWAP1"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "AND"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 6015,
											"end": 6047,
											"name": "JUMPDEST"
										},
										{
											"begin": 5992,
											"end": 6000,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6011,
											"name": "CALLER"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "AND"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "AND"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "DUP2"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "MSTORE"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "ADD"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "SWAP1"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "DUP2"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "MSTORE"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "ADD"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "KECCAK256"
										},
										{
											"begin": 5992,
											"end": 6047,
											"name": "DUP2"
										},
										{
											"begin": 5992,
											"end": 6047,
											"name": "SWAP1"
										},
										{
											"begin": 5992,
											"end": 6047,
											"name": "SSTORE"
										},
										{
											"begin": 5992,
											"end": 6047,
											"name": "POP"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6130,
											"name": "CALLER"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "AND"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "AND"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "DUP2"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "MSTORE"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "SWAP1"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "DUP2"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "MSTORE"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "KECCAK256"
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "SLOAD"
										},
										{
											"begin": 6110,
											"end": 6135,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 6110,
											"end": 6135,
											"name": "SWAP1"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "SWAP2"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "SWAP1"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "AND"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 6110,
											"end": 6143,
											"name": "JUMPDEST"
										},
										{
											"begin": 6086,
											"end": 6095,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6106,
											"name": "CALLER"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "AND"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "AND"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "DUP2"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "MSTORE"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "ADD"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "SWAP1"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "DUP2"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "MSTORE"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "ADD"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6107,
											"name": "KECCAK256"
										},
										{
											"begin": 6086,
											"end": 6143,
											"name": "DUP2"
										},
										{
											"begin": 6086,
											"end": 6143,
											"name": "SWAP1"
										},
										{
											"begin": 6086,
											"end": 6143,
											"name": "SSTORE"
										},
										{
											"begin": 6086,
											"end": 6143,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6173,
											"name": "CALLER"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "AND"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "PUSH",
											"value": "2CFCE4AF01BCB9D6CF6C84EE1B7C491100B8695368264146A94D71E10A63083F"
										},
										{
											"begin": 6175,
											"end": 6181,
											"name": "DUP4"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "MLOAD"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "DUP1"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "DUP3"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "MSTORE"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "ADD"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "SWAP2"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "POP"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "POP"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "MLOAD"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "DUP1"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "SWAP2"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "SUB"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "SWAP1"
										},
										{
											"begin": 6154,
											"end": 6182,
											"name": "LOG2"
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6193,
											"end": 6204,
											"name": "SWAP1"
										},
										{
											"begin": 6193,
											"end": 6204,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP2"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "SWAP1"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "POP"
										},
										{
											"begin": 5809,
											"end": 6212,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "KECCAK256"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMPDEST"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SLOAD"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "EXP"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SWAP1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DIV"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "AND"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP2"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DIV"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DIV"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DIV"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "LT"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DIV"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "KECCAK256"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "GT"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SUB"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP3"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1243,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "JUMPDEST"
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3411,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "AND"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "EQ"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "ISZERO"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "ISZERO"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "ISZERO"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "JUMPI"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "DUP1"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "REVERT"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "JUMPDEST"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP2"
										},
										{
											"begin": 3438,
											"end": 3448,
											"name": "GT"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "ISZERO"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "ISZERO"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "REVERT"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 3430,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP1"
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3488,
											"name": "CALLER"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "KECCAK256"
										},
										{
											"begin": 3468,
											"end": 3489,
											"name": "SLOAD"
										},
										{
											"begin": 3468,
											"end": 3499,
											"name": "LT"
										},
										{
											"begin": 3468,
											"end": 3499,
											"name": "ISZERO"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "ISZERO"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "ISZERO"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "JUMPI"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "DUP1"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "REVERT"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 3460,
											"end": 3501,
											"name": "JUMPDEST"
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP4"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "AND"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "AND"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "DUP2"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "MSTORE"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "ADD"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "SWAP1"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "DUP2"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "MSTORE"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "ADD"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "KECCAK256"
										},
										{
											"begin": 3580,
											"end": 3594,
											"name": "SLOAD"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP6"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "AND"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "AND"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "KECCAK256"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SLOAD"
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "ADD"
										},
										{
											"begin": 3553,
											"end": 3594,
											"name": "LT"
										},
										{
											"begin": 3553,
											"end": 3594,
											"name": "ISZERO"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "ISZERO"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "ISZERO"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "JUMPI"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "DUP1"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "REVERT"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 3545,
											"end": 3595,
											"name": "JUMPDEST"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 3681,
											"end": 3687,
											"name": "DUP2"
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3675,
											"name": "CALLER"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "AND"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "AND"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "MSTORE"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "MSTORE"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "KECCAK256"
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "SLOAD"
										},
										{
											"begin": 3655,
											"end": 3680,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3655,
											"end": 3680,
											"name": "SWAP1"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "SWAP2"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "SWAP1"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "AND"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 3655,
											"end": 3688,
											"name": "JUMPDEST"
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3651,
											"name": "CALLER"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "AND"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "AND"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "DUP2"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "MSTORE"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "DUP2"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "MSTORE"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3652,
											"name": "KECCAK256"
										},
										{
											"begin": 3631,
											"end": 3688,
											"name": "DUP2"
										},
										{
											"begin": 3631,
											"end": 3688,
											"name": "SWAP1"
										},
										{
											"begin": 3631,
											"end": 3688,
											"name": "SSTORE"
										},
										{
											"begin": 3631,
											"end": 3688,
											"name": "POP"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "DUP2"
										},
										{
											"begin": 3744,
											"end": 3753,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "DUP6"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "AND"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "AND"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "DUP2"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "MSTORE"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "ADD"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "SWAP1"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "DUP2"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "MSTORE"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "ADD"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "KECCAK256"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "SLOAD"
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "SWAP1"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP2"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP1"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "AND"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "JUMPDEST"
										},
										{
											"begin": 3727,
											"end": 3736,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3740,
											"name": "DUP5"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "AND"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "AND"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "DUP2"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "MSTORE"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "DUP2"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "MSTORE"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3741,
											"name": "KECCAK256"
										},
										{
											"begin": 3727,
											"end": 3770,
											"name": "DUP2"
										},
										{
											"begin": 3727,
											"end": 3770,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3770,
											"name": "SSTORE"
										},
										{
											"begin": 3727,
											"end": 3770,
											"name": "POP"
										},
										{
											"begin": 3836,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "AND"
										},
										{
											"begin": 3824,
											"end": 3834,
											"name": "CALLER"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "AND"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "DUP4"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "MLOAD"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "DUP1"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "DUP3"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "DUP2"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "MSTORE"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "ADD"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "SWAP2"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "POP"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "POP"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "MLOAD"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "DUP1"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "SWAP2"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "SUB"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "SWAP1"
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "LOG3"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "POP"
										},
										{
											"begin": 3335,
											"end": 3915,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "JUMPDEST"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "MSTORE"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "MSTORE"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "KECCAK256"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SLOAD"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "DUP2"
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "JUMPDEST"
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP2"
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5471,
											"name": "CALLER"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "AND"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "AND"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "DUP2"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "MSTORE"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "ADD"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "SWAP1"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "DUP2"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "MSTORE"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "ADD"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "KECCAK256"
										},
										{
											"begin": 5451,
											"end": 5472,
											"name": "SLOAD"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "LT"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "ISZERO"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "ISZERO"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "ISZERO"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "JUMPI"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "DUP1"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "REVERT"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5483,
											"name": "JUMPDEST"
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP3"
										},
										{
											"begin": 5535,
											"end": 5545,
											"name": "GT"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "ISZERO"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "ISZERO"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "JUMPI"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "DUP1"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "REVERT"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "JUMPDEST"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5609,
											"end": 5615,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 5592,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5603,
											"name": "CALLER"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "DUP2"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "MSTORE"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "KECCAK256"
										},
										{
											"begin": 5583,
											"end": 5604,
											"name": "SLOAD"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "SWAP2"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5583,
											"end": 5616,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5579,
											"name": "CALLER"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5580,
											"name": "KECCAK256"
										},
										{
											"begin": 5559,
											"end": 5616,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5616,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5616,
											"name": "SSTORE"
										},
										{
											"begin": 5559,
											"end": 5616,
											"name": "POP"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5697,
											"name": "CALLER"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "KECCAK256"
										},
										{
											"begin": 5678,
											"end": 5698,
											"name": "SLOAD"
										},
										{
											"begin": 5678,
											"end": 5702,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5678,
											"end": 5702,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP2"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "JUMPDEST"
										},
										{
											"begin": 5655,
											"end": 5663,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5674,
											"name": "CALLER"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "DUP2"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "MSTORE"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "ADD"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "DUP2"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "MSTORE"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "ADD"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "KECCAK256"
										},
										{
											"begin": 5655,
											"end": 5710,
											"name": "DUP2"
										},
										{
											"begin": 5655,
											"end": 5710,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5710,
											"name": "SSTORE"
										},
										{
											"begin": 5655,
											"end": 5710,
											"name": "POP"
										},
										{
											"begin": 5752,
											"end": 5762,
											"name": "CALLER"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "AND"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "PUSH",
											"value": "F97A274FACE0B5517365AD396B1FDBA6F68BD3135EF603E44272ADBA3AF5A1E0"
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP4"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "MLOAD"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "DUP1"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "DUP3"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "DUP2"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "MSTORE"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "ADD"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "SWAP2"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "POP"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "POP"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "MLOAD"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "DUP1"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "SWAP2"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "SUB"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "SWAP1"
										},
										{
											"begin": 5745,
											"end": 5771,
											"name": "LOG2"
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5782,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5782,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP2"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "POP"
										},
										{
											"begin": 5378,
											"end": 5801,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "KECCAK256"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP1"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "KECCAK256"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SWAP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "SLOAD"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1494,
											"end": 1560,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "JUMPDEST"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SLOAD"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "EXP"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DIV"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "CALLER"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "EQ"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "ISZERO"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPI"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "DUP1"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "REVERT"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2901,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "AND"
										},
										{
											"begin": 3203,
											"end": 3211,
											"name": "DUP2"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "AND"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "EQ"
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "ISZERO"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "ISZERO"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "ISZERO"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "JUMPI"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "DUP1"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "REVERT"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 3195,
											"end": 3226,
											"name": "JUMPDEST"
										},
										{
											"begin": 3263,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "AND"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "SLOAD"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "EXP"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "DIV"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "AND"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3272,
											"name": "LOG3"
										},
										{
											"begin": 3289,
											"end": 3297,
											"name": "DUP1"
										},
										{
											"begin": 3281,
											"end": 3286,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3281,
											"end": 3286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "EXP"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "SLOAD"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "MUL"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "NOT"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "AND"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "DUP4"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "AND"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "MUL"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "OR"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "SSTORE"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "POP"
										},
										{
											"begin": 3124,
											"end": 3305,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 848,
											"end": 855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP3"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "GT"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "JUMPDEST"
										},
										{
											"begin": 896,
											"end": 897,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 893,
											"name": "DUP4"
										},
										{
											"begin": 892,
											"end": 897,
											"name": "SUB"
										},
										{
											"begin": 885,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 885,
											"end": 897,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "SWAP3"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 903,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "JUMPDEST"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP1"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "DUP3"
										},
										{
											"begin": 995,
											"end": 996,
											"name": "DUP5"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1000,
											"name": "POP"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "DUP4"
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1020,
											"name": "LT"
										},
										{
											"begin": 1014,
											"end": 1020,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "JUMPI"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "INVALID"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 1028,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 1028,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "SWAP3"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 1042,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"freeze(uint256)": "d7a78db8",
							"freezeOf(address)": "cd4217c1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze(uint256)": "6623fc46",
							"withdrawEther(uint256)": "3bed33ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ETHREN.sol\":\"ETHREN\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ETHREN.sol\":{\"keccak256\":\"0xb07cd0b395db7420026876c3d195ffc63d9c65b56dc01c0459c93011d3cf67ac\",\"urls\":[\"bzzr://86785d43ab70da624e0abd78cad36f116ea13f18c627ee8bbbe36e0c53b5625c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/ETHREN.sol\":303:1045  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ETHREN.sol\":303:1045  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058203507bdec5607cf1f282c0d3dfc0d8af3a2fe6f9e13f4ed21b5657571361a97750029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058203507bdec5607cf1f282c0d3dfc0d8af3a2fe6f9e13f4ed21b5657571361a97750029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD SMOD 0xbd 0xec JUMP SMOD 0xcf 0x1f 0x28 0x2c 0xd RETURNDATASIZE 0xfc 0xd DUP11 RETURN LOG2 INVALID PUSH16 0x9E13F4ED21B5657571361A9775002900 ",
							"sourceMap": "303:742:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058203507bdec5607cf1f282c0d3dfc0d8af3a2fe6f9e13f4ed21b5657571361a97750029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD SMOD 0xbd 0xec JUMP SMOD 0xcf 0x1f 0x28 0x2c 0xd RETURNDATASIZE 0xfc 0xd DUP11 RETURN LOG2 INVALID PUSH16 0x9E13F4ED21B5657571361A9775002900 ",
							"sourceMap": "303:742:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 303,
									"end": 1045,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 1045,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203507bdec5607cf1f282c0d3dfc0d8af3a2fe6f9e13f4ed21b5657571361a97750029",
									".code": [
										{
											"begin": 303,
											"end": 1045,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "ADDRESS"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "EQ"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 1045,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ETHREN.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ETHREN.sol\":{\"keccak256\":\"0xb07cd0b395db7420026876c3d195ffc63d9c65b56dc01c0459c93011d3cf67ac\",\"urls\":[\"bzzr://86785d43ab70da624e0abd78cad36f116ea13f18c627ee8bbbe36e0c53b5625c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:77:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function ETHREN( uint256 initialSupply, uint8 decimalUnits) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2778,
					"file": "contracts/ETHREN.sol",
					"start": 2305
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:100:7: Warning: Invoking events without \"emit\" prefix is deprecated.\n      OwnershipTransferred(owner, newOwner);\r\n      ^-----------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3272,
					"file": "contracts/ETHREN.sol",
					"start": 3235
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:113:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, _value);   // Notify anyone listening that this transfer took place\r\n        ^-------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3848,
					"file": "contracts/ETHREN.sol",
					"start": 3815
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:134:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4921,
					"file": "contracts/ETHREN.sol",
					"start": 4893
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:144:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Burn(msg.sender, _value);\r\n        ^----------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5340,
					"file": "contracts/ETHREN.sol",
					"start": 5316
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:154:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Freeze(msg.sender, _value);\r\n        ^------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5771,
					"file": "contracts/ETHREN.sol",
					"start": 5745
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/ETHREN.sol:164:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Unfreeze(msg.sender, _value);\r\n        ^--------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6182,
					"file": "contracts/ETHREN.sol",
					"start": 6154
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ETHREN.sol": {
				"ast": {
					"absolutePath": "contracts/ETHREN.sol",
					"exportedSymbols": {
						"ETHREN": [
							615
						],
						"SafeMath": [
							97
						]
					},
					"id": 616,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that revert() on error\r",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "392:113:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "408:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "399:37:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "411:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "427:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "420:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "442:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "458:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "454:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "442:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "473:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "477:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "473:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "466:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "466:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "466:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "498:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "491:8:0"
											}
										]
									},
									"documentation": null,
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:9:0"
									},
									"scope": 97,
									"src": "325:180:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "578:206:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "663:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "675:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "663:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "777:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "770:8:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "524:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "523:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:9:0"
									},
									"scope": 97,
									"src": "511:273:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "857:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "871:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "864:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "864:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "892:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "896:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "892:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "885:12:0"
											}
										]
									},
									"documentation": null,
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "803:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "847:9:0"
									},
									"scope": 97,
									"src": "790:113:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "976:66:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "983:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "983:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "995:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "999:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "983:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1019:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "1007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1007:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "1035:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "1028:8:0"
											}
										]
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "922:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "933:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "921:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "966:9:0"
									},
									"scope": 97,
									"src": "909:133:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 616,
							"src": "303:742:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 615,
							"linearizedBaseContracts": [
								615
							],
							"name": "ETHREN",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 100,
									"libraryName": {
										"contractScope": null,
										"id": 98,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "1171:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1165:27:0",
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 102,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1198:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 101,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1198:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 104,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1223:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 103,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1223:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 106,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1250:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 105,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1250:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 108,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1278:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 110,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1311:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 109,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1311:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 114,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1391:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 113,
										"keyType": {
											"id": 111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1391:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 112,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1411:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 118,
									"name": "freezeOf",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1443:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 117,
										"keyType": {
											"id": 115,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1452:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1443:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 124,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1494:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 123,
										"keyType": {
											"id": 119,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1503:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1494:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 122,
											"keyType": {
												"id": 120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1523:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1514:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1534:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 132,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1668:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1690:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1667:57:0"
									},
									"src": "1653:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 138,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1800:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1799:37:0"
									},
									"src": "1789:48:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 144,
									"name": "Freeze",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1915:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1914:37:0"
									},
									"src": "1902:50:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 150,
									"name": "Unfreeze",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2034:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2056:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2033:37:0"
									},
									"src": "2019:52:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 156,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2150:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2181:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2149:57:0"
									},
									"src": "2123:84:0"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2372:406:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 163,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "2383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 166,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "2393:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2393:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2383:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 167,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2407:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2383:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2383:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 170,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2470:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 171,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2484:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2470:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2470:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2531:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "457468657265756d2052656e6577",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2538:16:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_10d6f1b48495830657afdff8a662a01ff07e1e33c938bdd28f939a372b2eaa09",
															"typeString": "literal_string \"Ethereum Renew\""
														},
														"value": "Ethereum Renew"
													},
													"src": "2531:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2531:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 178,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2604:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "45544852454e",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2613:8:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0c2ebe73f27c725215440956b864dba90d04444a17ecc6b2964cc9ce88cbdf77",
															"typeString": "literal_string \"ETHREN\""
														},
														"value": "ETHREN"
													},
													"src": "2604:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2604:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 182,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2674:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 183,
														"name": "decimalUnits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2674:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2674:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 186,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2752:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 187,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "2760:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2752:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2752:18:0"
											}
										]
									},
									"documentation": null,
									"id": 192,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "ETHREN",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2322:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "decimalUnits",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2345:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 159,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2320:44:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2372:0:0"
									},
									"scope": 615,
									"src": "2305:473:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2892:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 195,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "2909:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 197,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "2923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2909:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "2901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2901:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2901:28:0"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "2938:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.\r",
									"id": 203,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2889:2:0"
									},
									"src": "2871:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3186:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 211,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3203:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3223:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3215:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3215:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3203:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "3195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3195:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "3195:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 219,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3256:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 220,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3235:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3235:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "3235:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 223,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "3281:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 224,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3281:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "3281:16:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\r\n@param newOwner The address to transfer ownership to.\r",
									"id": 228,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 208,
											"modifierName": {
												"argumentTypes": null,
												"id": 207,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 203,
												"src": "3176:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3176:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3151:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3150:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:0:0"
									},
									"scope": 615,
									"src": "3124:181:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3389:526:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "3408:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3415:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "3408:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "3400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3400:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 242,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3438:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3447:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "3430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "3430:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 248,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3468:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 251,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "3478:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3478:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3468:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 252,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3493:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3468:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "3460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3460:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 257,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "3553:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 259,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 258,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "3563:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3553:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 260,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3570:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3553:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 262,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 264,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 263,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3590:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3580:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3553:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "3545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3545:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "3545:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 268,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3631:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3641:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3631:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 277,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3681:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 272,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3655:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 275,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 273,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "3665:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3665:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3655:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3655:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3655:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3631:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "3631:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 281,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 283,
														"indexExpression": {
															"argumentTypes": null,
															"id": 282,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3737:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3727:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 284,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3744:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 285,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3754:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3744:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3744:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3744:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3727:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3727:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3824:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3824:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 295,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3836:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 296,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3841:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "3815:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3815:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3815:33:0"
											}
										]
									},
									"documentation": null,
									"id": 300,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3353:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3352:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3389:0:0"
									},
									"scope": 615,
									"src": "3335:580:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4066:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "4085:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4094:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4085:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4077:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "4077:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 315,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4107:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 319,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "4117:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4117:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4107:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 320,
														"indexExpression": {
															"argumentTypes": null,
															"id": 318,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4107:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 321,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4141:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4107:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4107:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4165:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 308,
												"id": 325,
												"nodeType": "Return",
												"src": "4158:11:0"
											}
										]
									},
									"documentation": null,
									"id": 327,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4028:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4009:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4060:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4059:6:0"
									},
									"scope": 615,
									"src": "3993:184:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "4321:630:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4340:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4347:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "4340:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4332:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4332:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 345,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4379:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4370:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "4362:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "4400:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4410:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4400:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 354,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4420:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4400:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4392:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 359,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "4480:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 361,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 360,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "4490:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4480:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 362,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "4497:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4480:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "4507:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 366,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 365,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4517:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4507:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4480:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4472:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4472:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4564:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 372,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "4574:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 374,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 373,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "4584:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4574:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 377,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 375,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "4591:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4591:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4574:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4564:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "4556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "4556:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4635:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 383,
														"indexExpression": {
															"argumentTypes": null,
															"id": 382,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4645:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4635:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 388,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4675:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "4654:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 386,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4664:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4654:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "4654:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4654:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4635:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "4635:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 392,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4723:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 394,
														"indexExpression": {
															"argumentTypes": null,
															"id": 393,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4733:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4723:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 399,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4759:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 395,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "4740:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 396,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4750:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4740:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "4740:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4740:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4723:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "4723:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 403,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4811:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 407,
															"indexExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4821:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4811:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 408,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 405,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "4828:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4828:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4811:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 416,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4875:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 409,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "4842:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 411,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 410,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "4852:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4842:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 414,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 412,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "4859:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4859:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4842:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "4842:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4842:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4811:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "4811:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 421,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4902:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 422,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4909:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 423,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "4893:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4893:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "4893:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4939:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 427,
												"nodeType": "Return",
												"src": "4932:11:0"
											}
										]
									},
									"documentation": null,
									"id": 429,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4255:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4270:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4283:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4254:44:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4315:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4315:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4314:6:0"
									},
									"scope": 615,
									"src": "4233:718:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5021:349:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 439,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "5040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 442,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 440,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5050:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5050:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5040:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 443,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5065:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5040:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5032:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5032:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "5032:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 448,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5124:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5133:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5124:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5116:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "5116:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 453,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5148:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 456,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5158:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5158:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5148:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 462,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 457,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "5172:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 458,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5182:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5182:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5172:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5172:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5148:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "5148:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "5245:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 469,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5275:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 467,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "5259:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5259:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5259:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5245:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5245:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5321:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5321:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5333:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5316:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5316:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5316:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5358:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 437,
												"id": 480,
												"nodeType": "Return",
												"src": "5351:11:0"
											}
										]
									},
									"documentation": null,
									"id": 482,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 434,
											"modifierName": {
												"argumentTypes": null,
												"id": 433,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 203,
												"src": "4996:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4996:9:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4973:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4972:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5015:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5014:6:0"
									},
									"scope": 615,
									"src": "4959:411:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "5432:369:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 490,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "5451:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 493,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 491,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5461:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5461:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5451:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 494,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "5476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5451:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "5443:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 499,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "5535:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5544:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5535:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5527:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 504,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5559:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 507,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 505,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5569:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5569:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5559:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 513,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "5609:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 508,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "5583:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 511,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 509,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5593:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5593:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5583:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5583:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5583:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5559:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "5559:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 517,
															"name": "freezeOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5655:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 520,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 518,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5664:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5655:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 526,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "5703:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "freezeOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "5678:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 524,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 522,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5687:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5687:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5678:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5678:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5678:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5655:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "5655:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5752:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "5764:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "Freeze",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "5745:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5745:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5745:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5789:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 488,
												"id": 537,
												"nodeType": "Return",
												"src": "5782:11:0"
											}
										]
									},
									"documentation": null,
									"id": 539,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "freeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5394:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5426:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5425:6:0"
									},
									"scope": 615,
									"src": "5378:423:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "5865:347:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 547,
																	"name": "freezeOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "5884:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 550,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 548,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "5893:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5884:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 551,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "5908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5884:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5876:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5876:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "5876:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "5968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5977:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5968:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															634
														],
														"referencedDeclaration": 633,
														"src": "5960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "5960:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 561,
															"name": "freezeOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5992:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 564,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "6001:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6001:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5992:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 570,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "6040:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 565,
																	"name": "freezeOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "6015:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 568,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 566,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "6024:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6024:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6015:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "6015:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6015:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5992:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "5992:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6086:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 577,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "6096:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6096:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6086:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 583,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "6136:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 578,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "6110:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 581,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 579,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "6120:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6120:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6110:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "6110:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6110:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6086:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "6086:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 588,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "6163:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 590,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "Unfreeze",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6154:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6154:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "6154:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6200:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 545,
												"id": 594,
												"nodeType": "Return",
												"src": "6193:11:0"
											}
										]
									},
									"documentation": null,
									"id": 596,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "unfreeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5826:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5859:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5858:6:0"
									},
									"scope": 615,
									"src": "5809:403:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "6319:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6345:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 603,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6330:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "6330:22:0"
											}
										]
									},
									"documentation": null,
									"id": 610,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 601,
											"modifierName": {
												"argumentTypes": null,
												"id": 600,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 203,
												"src": "6309:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6309:9:0"
										}
									],
									"name": "withdrawEther",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6286:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6285:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6319:0:0"
									},
									"scope": 615,
									"src": "6263:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "6419:8:0",
										"statements": []
									},
									"documentation": null,
									"id": 614,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6401:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6419:0:0"
									},
									"scope": 615,
									"src": "6393:34:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 616,
							"src": "1142:5288:0"
						}
					],
					"src": "0:6430:0"
				},
				"id": 0
			}
		}
	}
}
